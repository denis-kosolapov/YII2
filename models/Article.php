<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "article".
 *
 * @property int $id
 * @property string $title
 * @property string $description
 * @property string $content
 * @property string $date
 * @property string $image
 * @property int $viewed
 * @property int $user_id
 * @property int $status
 * @property int $category_id
 *
 * @property ArticleTag[] $articleTags
 * @property Comment[] $comments
 */
class Article extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'article';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title'], 'required'],
            [['title', 'description', 'content'], 'string'],
            [['date'], 'date', 'format' => 'php:Y-m-d'],
            /*в этой строке устанавливается текущая дата*/
            [['date'], 'default', 'value' => date('Y-m-d')],
            [['title'], 'string', 'max' => 255],
            [['description'], 'required'],
            [['content'], 'required']
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'description' => 'Description',
            'content' => 'Content',
            'date' => 'Date',
            'image' => 'Image',
            'viewed' => 'Viewed',
            'user_id' => 'User ID',
            'status' => 'Status',
            'category_id' => 'Category ID'
        ];
    }

    //сохранить картинку в базе данных
    public function saveImage($filename)
    {
        $this->image = $filename;
        //отключить валидацию, так как она не для картинки а для статьи
        return $this->save(false);
    }

    /*вывести картинку в листинге (в админке)*/
    public function getImage()
    {
        /*если картинка есть, то вывести картинку, иначе вывести картинку "image not found"*/
        return ($this->image) ? '/uploads/' . $this->image : '/no-image.png';
    }

    /*удаление картинки в модели статьи, удаляем файл*/
    public function deleteImage()
    {
        /*вызываем метод удаления файла из папки*/
        $imageUploadModel = new ImageUpload();
        /*и передаем название файла который нужно удалить*/
        $imageUploadModel->deleteCurrentImage($this->image);
    }

    /*а вызов метода удаленя вызывается автоматически*/
    public function beforeDelete()
    {
        /*вызываем метод удаленя файла*/
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function getCategory()
    {
        return $this->hasOne(Category::className(), ['id' => 'category_id']);
    }

    public function saveCategory($category_id)
    {
        $category = Category::findOne($category_id);
        if($category != null)
        {
            $this->link('category', $category);
            return true;
        }
    }
}
